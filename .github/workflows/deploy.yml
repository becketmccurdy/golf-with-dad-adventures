name: Deploy to Vercel (prod)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      # Build your app. If you use Vite, this produces /dist
      - name: Build
        run: npm run build
        env:
          # Build-time envs for Vite must be prefixed with VITE_
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}

      # Use Vercel CLI â€” official + reliable
      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      # Pull env + link to the Vercel project
      - name: Vercel pull (prod)
        run: vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }}

      # Build on CI to create a prebuilt artifact
      - name: Vercel build (prod)
        run: vercel build --prod --token ${{ secrets.VERCEL_TOKEN }}

      # Deploy the prebuilt output to production
      - name: Vercel deploy (prod)
        run: vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }}
